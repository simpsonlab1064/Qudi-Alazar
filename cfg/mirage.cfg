global:
    # list of modules to load when starting
    startup_modules: [alazar_channel_control_gui, alazar_mirage_control_gui, alazar_plot_gui]

    # Module server configuration for accessing qudi GUI/logic/hardware modules from remote clients
    remote_modules_server:
        address: 'localhost'
        port: 12345

    # Server port for serving the active qudi module namespace locally (localhost).
    # Used by e.g. the Qudi jupyter kernel.
    namespace_server_port: 18861

    # If this flag is set (True), all arguments passed to qudi module APIs from remote
    # (jupyter notebook, qudi console, remote modules) will be wrapped and passed "per value"
    # (serialized and de-serialized). This is avoiding a lot of inconveniences with using numpy in
    # remote clients.
    # If you do not want to use this workaround and know what you are doing, you can disable this
    # feature by setting this flag to False.
    force_remote_calls_by_value: True

    # Qss stylesheet for controlling the appearance of the GUIs.
    # Absolute path or relative to qudi.artwork.styles
    stylesheet: 'qdark.qss'

    # Default root directory for measurement data storage. All eventual data sub-directories should
    # be contained within this directory. This is not enforced, just convention.
    # The fallback directory is <user home>/qudi/Data/
    # default_data_dir: C:\Users\neverhorst\qudi\Data

    # Save data to daily data sub-directories by default
    daily_data_dirs: True

gui:
    alazar_channel_control_gui:
        module.Class: 'control.alazar_channel_control_gui.AlazarChannelGui'
        connect:
            alazar_logic: alazar_logic

    alazar_mirage_control_gui:
        module.Class: 'control.alazar_mirage_control_gui.AlazarMirageControlGui'
        connect:
            mirage_logic: alazar_logic

    alazar_image_gui:
        module.Class: 'display.alazar_image_gui.AlazarImageGui'
        connect:
            alazar_logic: alazar_logic

    alazar_plot_gui:
        module.Class: 'display.alazar_plot_gui.AlazarPlotGui'
        connect:
            alazar_logic: alazar_logic

logic:
    alazar_logic:
        module.Class: 'mirage_logic.MirageLogic'
        connect:
            alazar: alazar_dummy
        options:
            num_buffers: 0 # 0 to use as many buffers as needed to prevent
                           # overflows. However, this might exhaust
                           # RAM, so can set to a number (>= 2) to use that many
                           # buffers and hope we process them fast enough to not
                           # hit an overrun
            min_mod: 1e-9  # Maximum value that samples per line can be different
                           # without triggering an error

            view_at_end: True # if the end_function or live_function produce data that is appropriate for 
            live_viewing_fn: 'imaging' # Function to use for live-viewing results
            qcl_pulse_period: 10000 # in us -- how long does the QCL stay at a given wavelength?

hardware:
    alazar_dummy:
        module.Class: 'alazar.alazar_dummy.AlazarDummy'

    alazar:
        module.Class: 'alazar.alazar_card.AlazarCard'
        options:
            systemId: 1 # only if there are multiple systems (not just multiple cards)
            clock: 1 # 0 for internal PLL, 1 for external
            sample_rate: 50_000_000 # Sample rate for acquisition, in Hz
            card_type: "c9350" # options are "c9440" or "c9350"
            trigger_level: 160 # 0-255, 0-127 = negative range 128-255 = positive range
            trigger_timeout: 5 # how long to wait (in seconds) for trigger before aborting, set to 0 for infinite